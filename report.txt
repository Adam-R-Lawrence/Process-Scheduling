Non-Preemptive Shortest Job First is a scheduling algorithm where the process that has the smallest job-time is chosen to be executed next. Scenarios where it performs better than the baselines are when there are long processes in front of shorter processes, as it will designate that the smaller processes can be finished sooner, thus reducing overhead time significantly. Scenarios where it does not perform as well is when there are exceptionally large processes, as those processes have the risk to never run if smaller processes keep coming.

Most Frequently Used page replacement algorithm works by having a counter for each memory page, when a page is used by a process it increments the counter by one. When a page fault occurs, MFU replaces the page with the highest counter. It performs better when we have a mix of processes with large and small job-time/memory requirements, as MFU will recognise that pages with the smallest counters probably contain processes that are probably not finished yet. Scenarios where it does not perform well include when most processes have similar job-times/memory requirements as in this case the frequency of the memory pages becomes random and provide less useful information to the algorithm.
